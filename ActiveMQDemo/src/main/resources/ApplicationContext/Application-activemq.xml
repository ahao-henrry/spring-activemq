<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!-- spring的属性加载器，加载多个properties文件中的属性 ，
    		如果只有一个properties文件则用<context />就行了，用了这个加载器过后不用在其他xml中再使用了-->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:/properties/config.properties</value>
				<value>classpath:/properties/activemq.properties</value>				
			</list>
		</property>
		<property name="fileEncoding" value="utf-8" />
	</bean>
	<!-- <context:property-placeholder location="classpath:/properties/activemq.properties" /> -->

    <!-- 发送方Connection的ConnectionFactory，由对应的 JMS服务厂商提供-->  
    <bean id="SendTargetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">  
        <property name="brokerURL" value="${brokerUrl}"/>  
    </bean>  
    <!-- 发送方 Spring用于管理真正的ConnectionFactory的ConnectionFactory -->  
    <bean id="SendconnectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">  
        <!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->  
        <property name="targetConnectionFactory" ref="SendTargetConnectionFactory"/>  
    </bean>  
    
    <!-- 接收方Connection的ConnectionFactory，由对应的 JMS服务厂商提供-->  
    <bean id="ReceiveTargetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">  
        <property name="brokerURL" value="${brokerUrl}"/>  
    </bean>  
    <!-- 接收方Spring用于管理真正的ConnectionFactory的ConnectionFactory -->  
    <bean id="ReceiveconnectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">  
        <!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->  
        <property name="targetConnectionFactory" ref="ReceiveTargetConnectionFactory"/>  
    </bean> 
    
    <!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 -->  
    <bean id="JmsTemplate" class="org.springframework.jms.core.JmsTemplate">  
        <!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->  
        <property name="connectionFactory" ref="SendconnectionFactory"/> 
        <property name="pubSubDomain" value="false" />  
         <property name="explicitQosEnabled" value="true" />  
    </bean>  
      
    <!--发送队列目的地-->  
    <bean id="sendqueueName" class="org.apache.activemq.command.ActiveMQQueue">  
     <constructor-arg name="name" value="${sendqueueName}"/>  
    </bean>  
    <!-- 接收队列目的地 --> 
    <bean id="receivequeueName" class="org.apache.activemq.command.ActiveMQQueue">  
        <constructor-arg name="name" value="${receivequeueName}"/> 
    </bean>  
    
    <!-- 发送topic目的地-->
    <bean id="sendtopicName" class="org.apache.activemq.command.ActiveMQTopic">
	<constructor-arg value="${sendtopicName}"></constructor-arg>
	</bean>
	<!-- 接收topic目的地 -->
    <bean id="receivetopicName" class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg value="${receivetopicName}"></constructor-arg>
	</bean>

    <!-- 消息监听器 -->  
    <bean id="activeMQConsumerServer" class="com.ahao.activemq.consumer.ActiveMQConsumerServer"/>  
    <!-- 消息监听容器 -->  
    <bean id="jmsContainer"
	class="org.springframework.jms.listener.DefaultMessageListenerContainer">  
        <property name="connectionFactory" ref="ReceiveconnectionFactory" />  
        <property name="destination" ref="receivequeueName" />   
        <property name="messageListener" ref="activeMQConsumerServer" /> 
        <property name="sessionTransacted" value="true"/> 
    </bean> 
    
</beans>  